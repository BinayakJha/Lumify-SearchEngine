[{"/Users/binayakjha/Desktop/Lumify/lumify-frontend/src/index.js":"1","/Users/binayakjha/Desktop/Lumify/lumify-frontend/src/App.js":"2","/Users/binayakjha/Desktop/Lumify/lumify-frontend/src/ImagePage.js":"3","/Users/binayakjha/Desktop/Lumify/lumify-frontend/src/SearchPage.js":"4","/Users/binayakjha/Desktop/Lumify/lumify-frontend/src/MainPage.js":"5","/Users/binayakjha/Desktop/Lumify/lumify-frontend/src/Sklton.js":"6","/Users/binayakjha/Desktop/Lumify/lumify-frontend/src/ImgSklton.js":"7","/Users/binayakjha/Desktop/Lumify/lumify-frontend/src/SearchBar.js":"8","/Users/binayakjha/Desktop/Lumify/lumify-frontend/src/SearchBarBox.js":"9"},{"size":253,"mtime":1678419133341,"results":"10","hashOfConfig":"11"},{"size":537,"mtime":1678443419029,"results":"12","hashOfConfig":"11"},{"size":1921,"mtime":1678518526000,"results":"13","hashOfConfig":"11"},{"size":9367,"mtime":1678520562756,"results":"14","hashOfConfig":"11"},{"size":878,"mtime":1678539342414,"results":"15","hashOfConfig":"11"},{"size":1445,"mtime":1678442067539,"results":"16","hashOfConfig":"11"},{"size":1216,"mtime":1678446213992,"results":"17","hashOfConfig":"11"},{"size":12169,"mtime":1678539374976,"results":"18","hashOfConfig":"11"},{"size":3806,"mtime":1678463918534,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1t9tsu0",{"filePath":"23","messages":"24","suppressedMessages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":1,"source":"29"},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33"},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44"},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51"},"/Users/binayakjha/Desktop/Lumify/lumify-frontend/src/index.js",[],[],"/Users/binayakjha/Desktop/Lumify/lumify-frontend/src/App.js",[],[],"/Users/binayakjha/Desktop/Lumify/lumify-frontend/src/ImagePage.js",["52","53","54","55","56"],[],"import React from 'react'\nimport './Search.css';\nimport { NavLink } from 'react-router-dom';\nimport Skeleton, { SkeletonTheme } from 'react-loading-skeleton'\nimport 'react-loading-skeleton/dist/skeleton.css'\nimport SearchBar from './SearchBar';\nimport ImgSklton from './ImgSklton';\nfunction ImagePage() {\n    const [image , setImage] = React.useState([])\n\n    React.useEffect(() => {\n        let query = window.location.search.split('=')[1]\n        let url = 'http://127.0.0.1:8000/imagesearch/'+query\n       \n        fetch(url).then(response =>{\n            response.json().then((result) => {\n                setImage(result)\n                localStorage.setItem('image', JSON.stringify(result));\n            })\n        }).catch((error) => {\n            console.log(error)\n        })\n    }, [])\n  return (\n    <div className='imagepage'>\n        <SearchBar/>\n\n        {image.length === 0 &&\n            <>\n            <div style={{display: 'flex', alignItems: 'center', padding: '10px', flexWrap:'wrap', justifyContent: 'center'}}>\n                    <ImgSklton />\n                    <ImgSklton />\n                    <ImgSklton />\n                    <ImgSklton />\n                    <ImgSklton />\n                    <ImgSklton />\n            </div>\n            </>\n        }\n        <div className=\"grid\">\n            <div className=\"grid-item\">\n            \n            {image.map((currElem) => {\n                const {image_desc, image_url} = currElem;\n                \n                return (\n\n                    <div className=\"image\">\n                        <a href={image_url} target=\"_blank\">\n                            <img src={image_url} alt=\"\" style={{width: '100%', height: '70%', objectFit: 'contain'}}/>\n                        </a>\n                        \n                    </div>\n                )\n            })}\n            </div>\n        </div>\n    </div>\n  )\n}\n\nexport default ImagePage","/Users/binayakjha/Desktop/Lumify/lumify-frontend/src/SearchPage.js",["57","58","59","60","61","62"],[],"import React from 'react'\nimport './Search.css';\nimport SearchBar from './SearchBar';\nimport { NavLink, useNavigate } from 'react-router-dom';\nimport Skeleton, { SkeletonTheme } from 'react-loading-skeleton'\nimport 'react-loading-skeleton/dist/skeleton.css'\nimport Sklton from './Sklton';\n\n\n\nfunction SearchPage() {\n    \n    let query = window.location.search.split('=')[1]\n    const [deta, setDeta] = React.useState([])\n    React.useEffect(() => {\n        // get the query from the url\n        let query = window.location.search.split('=')[1]\n        let url = 'http://127.0.0.1:8000/searchjs/' + query\n        fetch(url).then(response =>{\n            response.json().then((result) => {\n                setDeta(result)\n                localStorage.setItem('deta', JSON.stringify(result));\n            })\n        }).catch((error) => {\n            console.log(error)\n        })\n    }, [])\n\n\n\n    const [sidedeta, setSidedeta] = React.useState([])\n    React.useEffect(() => {\n        // get the query from the url\n        let query = window.location.search.split('=')[1]\n        let url = 'http://127.0.0.1:8000/sidesearch/' + query\n        fetch(url).then(response =>{\n            response.json().then((result) => {\n                setSidedeta(result)\n                localStorage.setItem('sidedeta', JSON.stringify(result));\n            })\n        }).catch((error) => {\n            console.log(error)\n        })\n    }, [])\n\n    const [related, setRelated] = React.useState([])\n    React.useEffect(() => {\n        // get the query from the url\n        let query = window.location.search.split('=')[1]\n        let url = `https://cors-anywhere.binayak123.repl.co/search.brave.com/api/suggest?q=${query}`\n        fetch(url).then(response =>{\n            response.json().then((result) => {\n                // / the data is in this form : (2) [inputValue, Array(8)] \n            // so we need to extract the array from the data\n                result = result[1]\n                setRelated(result)\n                console.log(result)\n                localStorage.setItem('related', JSON.stringify(result));\n                console.log(localStorage.getItem('related'))\n            })\n        }).catch((error) => {\n            console.log(error)\n        })\n    }, [])\n\n    const handleRelatedClick = (related) => {\n        window.location.href = `/search?query=${related}`\n    }\n    \n\n\n  return (\n    <div className='searchpage'>\n        <SearchBar/>\n        <div class=\"container-flex\">\n            <div class=\"row\">\n                <div id=\"result\" class=\"section col-xs-12 col-sm-11 col-lg-7\">\n                    {/* keep this skeleton until the data is loaded */}\n                    {deta.length === 0 &&\n                        <>\n                            <Sklton/>\n                            <Sklton/>\n                            <Sklton/>\n                            <Sklton/>\n                        </>\n                    }\n                    {deta.map((currElem) => {\n                        const {title, link, favicon, yt_url, text, cite} = currElem;\n                        \n                        return (\n                            <>\n                                <div class=\"snippet fdb \" data-loc=\"main\" data-pos=\"0\" data-type=\"web\" data-ref-pos=\"0\" id=\"snippets\">\n                                        <a href={link} class=\"result-header\" target=\"_self\">\n                                            <span class=\"snippet-title\">\n                                                <img alt=\"🌐\" class=\"favicon\" src={favicon}\n                                                    loading=\"lazy\" width=\"16\" height=\"16\" />\n                                                    {title}\n                                            </span>\n                                        </a>\n                                        <br/>\n                                        <p class=\"snippet-description\">\n                                            {text}\n\n                                            {yt_url? <img src={yt_url} width=\"25%\" height=\"100%\" style={{borderRadius: '8px', marginLeft: '10px'}} alt=\"logo\"/> : null}\n                                        \n                                        </p>\n                                        <cite class=\"snippet-url\">\n                                            <span class=\"netloc\">\n                                                <a href={link} style={{color: '#6d78a0'}}>\n                                                    {cite}\n                                                </a>\n                                            </span>\n                                        </cite>\n                                </div>\n                            </>\n                        )\n                    })}\n                </div>\n\n                \n                {/* side right */}\n\n                <div id=\"side-right\" class=\"section col-md-5 col-sm-12\">\n                    <div id=\"infobox\" class=\"infobox fdb\" data-loc=\"side\" data-pos=\"0\" data-type=\"infobox\" data-subtype=\"generic\" data-ref-pos=\"0\">\n                        {/* if the data is 0 then show Related searches */}\n                        {sidedeta.length === 0 &&\n                            <>\n                            </>\n                        }\n                        {sidedeta.map((currElem) => {\n                            const {title, links, favicon, description, cite} = currElem;\n                            return (\n                                <>\n                                    <div class=\"infobox-header\">\n                                        <div class=\"infobox-header-text\">\n                                            <br/>\n                                            <a class=\"infobox-title\" href=\"/\" target=\"_self\" style={{marginLeft: '-19px', textAlign: 'inherit', marginTop: '5px', fontSize: '25px'}}>\n                                                {title}\n                                            </a>\n                                            <br/>\n                                            <div class=\"infobox-description\" style={{padding: '0px', textAlign: 'justify'}}>\n                                                {description}\n\n                                            </div>\n                                        </div>\n                                    </div>\n\n                                    <div class=\"body\">\n                                        <div class=\"attribution text-xs\">\n                                                Data from\n                                                    <a href={links} id=\"source\" style={{color: '#1841D2', fontWeight: '500'}}> Click Here</a> \n                                                <hr/>\n                                        </div>\n                                    </div>\n                                </>\n                            )\n                        })}\n\n                        <div class=\"infobox-header\" style={{\n                            paddingTop: '0rem',\n                        }}>\n                                <div class=\"infobox-header-text\">\n                                    <br/>\n                                    <a class=\"infobox-title\" href=\"/\" target=\"_self\" style={{marginLeft: '-5px', textAlign: 'inherit', marginTop: '5px', fontSize: '25px'}}>\n                                        Related Searches\n                                    </a>\n                                    <br/>\n                                    <div class=\"infobox-description\" style={{padding: '0px', textAlign: 'justify'}}>\n                                        <ul style={{listStyleType: 'none', paddingLeft: '1rem'}}>\n                                            <hr />\n                                            {related.length === 0 &&\n                                                <>\n                                                    <li>\n                                                        No Related Searches\n                                                    </li>\n                                                    <hr />\n                                                </>\n                                            }\n                                            {related.map((currElem) => {   \n                                                return (\n                                                    <>\n                                                        <li>\n                                                            <NavLink  style={{color: '#1841D2', textDecoration: 'none'}} onClick={() => handleRelatedClick(currElem)}>\n                                                                {currElem}\n                                                            </NavLink>\n                                                        </li>\n                                                        <hr />\n                                                    </>\n                                                )\n                                            })}\n                                        </ul>\n                                    </div>\n                                </div>\n                        </div>\n                    </div>\n                </div>\n\n\n            </div>\n\n            \n        </div>\n    </div>\n  )\n}\n\nexport default SearchPage","/Users/binayakjha/Desktop/Lumify/lumify-frontend/src/MainPage.js",["63","64"],[],"/Users/binayakjha/Desktop/Lumify/lumify-frontend/src/Sklton.js",["65","66"],[],"import React from 'react'\nimport Skeleton, { SkeletonTheme } from 'react-loading-skeleton'\nimport 'react-loading-skeleton/dist/skeleton.css'\nfunction Sklton() {\n  return (\n    <div>\n        <SkeletonTheme color=\"whitesmoke\" highlightColor=\"whitesmoke\">\n            <div class=\"snippet fdb \" data-loc=\"main\" data-pos=\"0\" data-type=\"web\" data-ref-pos=\"0\" id=\"snippets\">\n                <a href=\"\" class=\"result-header\" target=\"_self\">\n                    <span class=\"snippet-title\" style={{display: 'flex'}}>\n                            {/* Add a skeleton image */}\n                            <Skeleton width={20} height={20} class=\"favicon\" />\n                            &nbsp;\n                            <Skeleton width={200} height={20} />\n                    </span>\n                </a>\n                <br/>\n                <p class=\"snippet-description\">\n                    <Skeleton width={600} height={20} />\n                </p>\n                <p class=\"snippet-description\">\n                    <Skeleton width={500} height={20} />\n                </p>\n                <cite class=\"snippet-url\">\n                    <span class=\"netloc\">\n                        <a href=\"\" style={{color: '#6d78a0'}}>\n                            <Skeleton width={200} height={20} />\n                        </a>\n                    </span>\n                </cite>\n            </div>\n        </SkeletonTheme>\n    </div>\n  )\n}\n\nexport default Sklton","/Users/binayakjha/Desktop/Lumify/lumify-frontend/src/ImgSklton.js",["67","68","69","70"],[],"import React from 'react'\nimport Skeleton, { SkeletonTheme } from 'react-loading-skeleton'\nimport 'react-loading-skeleton/dist/skeleton.css'\nimport './Main.css'\nfunction ImgSklton() {\n  return (\n    <div>\n        <SkeletonTheme color=\"whitesmoke\" highlightColor=\"whitesmoke\">\n            <div className=\"image\">\n                <a href=\"\" >\n                </a>\n                <p style={{fontSize: '13px', color: 'black !important' , padding: '10px'}}>\n                    <a href=\"\"  style={{color: 'black !important'}}>\n                        <Skeleton width={'100%'} height={200} />\n                    </a>\n                </p>\n            </div>\n           \n        </SkeletonTheme>\n        <SkeletonTheme color=\"whitesmoke\" highlightColor=\"whitesmoke\">\n            <div className=\"imagee\">\n                <a href=\"\" >\n                </a>\n                <p style={{fontSize: '13px', color: 'black !important' , padding: '10px'}}>\n                    <a href=\"\"  style={{color: 'black !important'}}>\n                        <Skeleton width={'100%'} height={200} />\n                    </a>\n                </p>\n            </div>\n\n        </SkeletonTheme>\n\n       \n    </div>\n  )\n}\n\nexport default ImgSklton","/Users/binayakjha/Desktop/Lumify/lumify-frontend/src/SearchBar.js",["71","72","73","74"],[],"/Users/binayakjha/Desktop/Lumify/lumify-frontend/src/SearchBarBox.js",["75"],[],"import React from 'react'\nimport './Search.css'\nimport {NavLink, useNavigate} from 'react-router-dom';\n\n\nfunction SearchBarBox() {\n    const [query, setQuery] = React.useState('')\n    const [suggestions, setSuggestions] = React.useState([])\n    const navigate = useNavigate()\n\n    const handleInputChange = async (e) => {\n        const inputValue = e.target.value\n        setQuery(inputValue)\n        if (inputValue.trim()) {\n        try {\n            const response = await fetch(`https://cors-anywhere.binayak123.repl.co/search.brave.com/api/suggest?q=${inputValue}`)\n            let data = await response.json()\n            console.log(data)\n            // the data is in this form : (2) [inputValue, Array(8)] \n            // so we need to extract the array from the data\n            data = data[1]\n\n            setSuggestions(data)\n        } catch (error) {\n            console.error(error)\n        }\n        } else {\n        setSuggestions([])\n        }\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault()\n        navigate(`/search?query=${query}`)\n    }\n\n    const handleSuggestionClick = (suggestion) => {\n        navigate(`/search?query=${suggestion}`)\n    }\n\n    \n  return (\n    <div>\n       <form className=\"form\" method=\"GET\" id=\"searchform\" onSubmit={handleSubmit}>\n        \n            <span id=\"search-icon\" className=\"no-display\">\n                <svg width=\"17\" height=\"17\" viewBox=\"0 0 17 17\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                    <path fill-rule=\"evenodd\" clip-rule=\"evenodd\"\n                        d=\"M6.57212 13.1442C2.94254 13.1442 0 10.2016 0 6.57173C0 2.94248 2.94268 0 6.57212 0C10.2016 0 13.1442 2.94248 13.1442 6.57173C13.1442 8.05658 12.6519 9.42642 11.8215 10.5269L16.3528 15.0581C16.7103 15.4156 16.7103 15.9952 16.3528 16.3527C15.9953 16.7102 15.4157 16.7102 15.0582 16.3527L10.527 11.8215C9.42657 12.6519 8.05682 13.1442 6.57212 13.1442ZM6.57212 11.2665C3.97956 11.2665 1.87775 9.16463 1.87775 6.57184C1.87775 3.97952 3.97966 1.87775 6.57212 1.87775C9.16458 1.87775 11.2665 3.97952 11.2665 6.57184C11.2665 9.16463 9.16468 11.2665 6.57212 11.2665Z\"\n                        fill=\"url(#paint0_linear)\">\n                    </path>\n                    <defs>\n                        <linearGradient id=\"paint0_linear\" x1=\"16.6209\" y1=\"16.6208\" x2=\"-1.90605\" y2=\"3.18655\"\n                        gradientUnits=\"userSpaceOnUse\">\n                        <stop stop-color=\"#BF14A2\"></stop>\n                        <stop offset=\"1\" stop-color=\"#F73A1C\"></stop>\n                        </linearGradient>\n                    </defs>\n                </svg>\n            </span>\n            <input name=\"query\" id='query' type=\"text\" className=\"form-input search__bar__input\"\n                placeholder=\"Illuminating Your Digital Search Experience..\" value={query} onChange={(e) => setQuery(e.target.value)}\n                autocapitalize=\"off\" autocomplete=\"off\" autocorrect=\"off\" spellcheck=\"false\" aria-label=\"Search\"\n                title=\"Search\" aria-autocomplete=\"both\" aria-haspopup=\"false\" maxlength=\"2048\" autofocus=\"\"\n                onInput={handleInputChange}\n            />\n            <input name=\"source\" value=\"web\" type=\"hidden\" />\n            <div id=\"autocomplete\" className=\"svelte-ir7f0d\"></div>\n            <div className=\"search__suggestions autocomplete-items\" id=\"auto1\">\n            <ul className=\"search__suggestions__list\" id=\"suggestionList\">\n                {suggestions.map((currElem, index) => (\n                    <li key={index} className=\"search__suggestions__list__result\" onClick={() => handleSuggestionClick(currElem)}>\n                        {currElem}\n                    </li>\n                ))}\n            </ul>\n            </div>\n        </form>\n    </div>\n  )\n}\n\nexport default SearchBarBox",{"ruleId":"76","severity":1,"message":"77","line":3,"column":10,"nodeType":"78","messageId":"79","endLine":3,"endColumn":17},{"ruleId":"76","severity":1,"message":"80","line":4,"column":8,"nodeType":"78","messageId":"79","endLine":4,"endColumn":16},{"ruleId":"76","severity":1,"message":"81","line":4,"column":20,"nodeType":"78","messageId":"79","endLine":4,"endColumn":33},{"ruleId":"76","severity":1,"message":"82","line":44,"column":24,"nodeType":"78","messageId":"79","endLine":44,"endColumn":34},{"ruleId":"83","severity":1,"message":"84","line":49,"column":25,"nodeType":"85","messageId":"86","endLine":49,"endColumn":61,"fix":"87"},{"ruleId":"76","severity":1,"message":"88","line":4,"column":19,"nodeType":"78","messageId":"79","endLine":4,"endColumn":30},{"ruleId":"76","severity":1,"message":"80","line":5,"column":8,"nodeType":"78","messageId":"79","endLine":5,"endColumn":16},{"ruleId":"76","severity":1,"message":"81","line":5,"column":20,"nodeType":"78","messageId":"79","endLine":5,"endColumn":33},{"ruleId":"76","severity":1,"message":"89","line":13,"column":9,"nodeType":"78","messageId":"79","endLine":13,"endColumn":14},{"ruleId":"76","severity":1,"message":"90","line":131,"column":50,"nodeType":"78","messageId":"79","endLine":131,"endColumn":57},{"ruleId":"76","severity":1,"message":"91","line":131,"column":72,"nodeType":"78","messageId":"79","endLine":131,"endColumn":76},{"ruleId":"76","severity":1,"message":"89","line":6,"column":10,"nodeType":"78","messageId":"79","endLine":6,"endColumn":15},{"ruleId":"92","severity":1,"message":"93","line":14,"column":25,"nodeType":"85","endLine":14,"endColumn":141},{"ruleId":"94","severity":1,"message":"95","line":9,"column":17,"nodeType":"85","endLine":9,"endColumn":65},{"ruleId":"94","severity":1,"message":"95","line":26,"column":25,"nodeType":"85","endLine":26,"endColumn":63},{"ruleId":"94","severity":1,"message":"95","line":10,"column":17,"nodeType":"85","endLine":10,"endColumn":29},{"ruleId":"94","severity":1,"message":"95","line":13,"column":21,"nodeType":"85","endLine":13,"endColumn":69},{"ruleId":"94","severity":1,"message":"95","line":22,"column":17,"nodeType":"85","endLine":22,"endColumn":29},{"ruleId":"94","severity":1,"message":"95","line":25,"column":21,"nodeType":"85","endLine":25,"endColumn":69},{"ruleId":"76","severity":1,"message":"96","line":3,"column":8,"nodeType":"78","messageId":"79","endLine":3,"endColumn":20},{"ruleId":"92","severity":1,"message":"93","line":60,"column":21,"nodeType":"85","endLine":60,"endColumn":133},{"ruleId":"94","severity":1,"message":"95","line":144,"column":29,"nodeType":"85","endLine":144,"endColumn":41},{"ruleId":"94","severity":1,"message":"95","line":160,"column":29,"nodeType":"85","endLine":160,"endColumn":41},{"ruleId":"76","severity":1,"message":"77","line":3,"column":9,"nodeType":"78","messageId":"79","endLine":3,"endColumn":16},"no-unused-vars","'NavLink' is defined but never used.","Identifier","unusedVar","'Skeleton' is defined but never used.","'SkeletonTheme' is defined but never used.","'image_desc' is assigned a value but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" (which implies rel=\"noopener\") is a security risk in older browsers: see https://mathiasbynens.github.io/rel-noopener/#recommendations","JSXOpeningElement","noTargetBlankWithoutNoreferrer",{"range":"97","text":"98"},"'useNavigate' is defined but never used.","'query' is assigned a value but never used.","'favicon' is assigned a value but never used.","'cite' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","'SearchBarBox' is defined but never used.",[1609,1609]," rel=\"noreferrer\""]